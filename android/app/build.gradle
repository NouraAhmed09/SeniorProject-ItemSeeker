plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
    id 'com.google.gms.google-services'
}

dependencies {
  // Import the Firebase BoM
  implementation platform('com.google.firebase:firebase-bom:33.5.1')

    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.0'
        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1' // JUnit 5 API
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1' // JUnit 5 Engine
    androidTestImplementation 'androidx.test:runner:1.6.1'
    androidTestImplementation 'androidx.test:rules:1.6.1'


}
android {
    namespace = "com.example.seeker_app"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId = "com.example.seeker_app"
        // You can update the following values to match your application needs.
        // For more information, see: https://flutter.dev/to/review-gradle-config.
        minSdkVersion 26
        targetSdkVersion 33
        versionCode = flutter.versionCode
        versionName = flutter.versionName
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig = signingConfigs.debug
        }
    }

    buildTypes {
        release {
            multiDexEnabled true
            // Enabling universal APK build
            ndk {
                abiFilters "arm64-v8a", "armeabi-v7a", "x86_64", "x86"
            }
        }
    }
}

flutter {
    source = "../.."
}
